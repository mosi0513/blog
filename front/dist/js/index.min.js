function Index(){var t=this;t.page=2,t.category_id=0,t.loadBtn=$(".submitbtn")}Index.prototype.listenloadMoreEvent=function(){var n=this,i=$(".submitbtn");i.click(function(){msajax.get({url:"/article/article_list/",data:{p:n.page,category_id:n.category_id},success:function(t){if(200===t.code){var e=t.data;if(0<e.length){var a=template("news-item",{articles:e});$(".news-list").append(a),n.page+=1}else i.hide()}}})})},Index.prototype.listenCategorySwitchEvent=function(){var o=this;$(".category-group").children().click(function(){var i=$(this),s=i.attr("data-category");console.log(s);msajax.get({url:"/article/article_list/",data:{category_id:s,p:1},success:function(t){if(200===t.code){var e=t.data,a=template("news-item",{articles:e}),n=$(".news-list");n.empty(),n.append(a),o.page=2,o.category_id=s,i.addClass("active").siblings().removeClass("active"),o.loadBtn.show()}}})})},Index.prototype.run=function(){this.listenloadMoreEvent(),this.listenCategorySwitchEvent()},$(function(){(new Index).run()}),$(function(){window.template&&(template.defaults.imports.timeSince=function(t){var e=new Date(t),a=e.getTime(),n=((new Date).getTime()-a)/1e3;return n<60?"刚刚":60<=n&&n<3600?(minutes=parseInt(n/60),minutes+"分钟前"):3600<=n&&n<86400?(hours=parseInt(n/60/60),hours+"小时前"):86400<=n&&n<2592e3?(days=parseInt(n/60/60/24),days+"天前"):e.getFullYear()+"/"+e.getMonth()+"/"+e.getDay()+" "+e.getHours()+":"+e.getMinutes()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
